{"version":3,"sources":["logic.ts","components/Pin.tsx","components/Map.tsx","components/Table.tsx","components/Slider/Tick.tsx","components/Slider/Track.tsx","components/Slider/Handle.tsx","components/Slider/index.tsx","App.tsx","index.tsx"],"names":["stores_json","require","getFilteredStores","range","filter","store","volume","_","inRange","retail","service","getVolume","useLogic","useState","stores","setStores","React","zoom","setZoom","setRange","lat","lng","center","setCenter","useEffect","updateStores","domain","apiKey","key","process","onSliderChange","values","isEqual","onSliderUpdate","onRowClick","params","find","id","data","renderTooltip","name","toLocaleString","phone","address","Store","Tooltip","title","placement","interactive","children","data-tip","data-for","size","color","style","transform","Map","bootstrapURLKeys","console","log","className","map","index","memo","prevProps","nextProps","DataTable","parentWidth","window","innerWidth","columns","field","hide","headerName","width","valueFormatter","value","rows","autoPageSize","Track","tick","count","position","marginTop","height","backgroundColor","left","percent","fontSize","textAlign","marginLeft","source","target","getTrackProps","zIndex","borderRadius","cursor","Handle","min","max","handle","getHandleProps","role","aria-valuemin","aria-valuemax","aria-valuenow","boxShadow","sliderStyle","margin","railStyle","VolumeSlider","onChange","onUpdate","mode","step","rootStyle","getRailProps","handles","right","tracks","ticks","length","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.92e1af78.chunk.js","sourcesContent":["import _ from \"lodash\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst stores_json = require(\"./stores.json\");\r\n\r\nexport interface store {\r\n\tid: number;\r\n\tname: string;\r\n\tphone: string;\r\n\taddress: string;\r\n\tretail: number;\r\n\tservice: number;\r\n\tlat: number;\r\n\tlng: number;\r\n}\r\n\r\nconst getVolume = (store: store): number => store.retail + store.service;\r\n\r\nconst inRange = (volume: number, range: number[]): boolean => _.inRange(volume / 1000000, range[0], range[1]);\r\n\r\nconst getFilteredStores = (range: number[]): store[] => stores_json.filter((store) => inRange(getVolume(store), range));\r\n\r\nexport function useLogic() {\r\n\tconst domain = [0, 35];\r\n\tconst [stores, setStores] = useState<store[]>([]);\r\n\tconst [zoom, setZoom] = React.useState<number>(9);\r\n\tconst [range, setRange] = useState<number[]>([5, 15]);\r\n\tconst apiKey = { key: process.env.REACT_APP_MAP_API_KEY as string };\r\n\tconst [center, setCenter] = useState<{ lat: number; lng: number }>({ lat: 43.65107, lng: -79.347015 });\r\n\r\n\tconst updateStores = (range: number[]) => setStores(getFilteredStores(range));\r\n\r\n\tconst onSliderUpdate = (values: number[]) => !_.isEqual(values, range) && setRange(values);\r\n\r\n\tconst onSliderChange = (values: number[]) => !_.isEqual(values, range) && setRange(values);\r\n\r\n\tconst onRowClick = (params) => {\r\n\t\tsetCenter({ ..._.find(stores_json, (store) => store.id === params.data.id) });\r\n\t\tsetZoom(12);\r\n\t};\r\n\r\n\tuseEffect(() => updateStores(range), [range]);\r\n\r\n\treturn { stores, domain, range, apiKey, zoom, center, onSliderChange, onSliderUpdate, onRowClick };\r\n}\r\n","import React from \"react\";\r\nimport { store } from \"../logic\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\nimport { BsFlagFill } from \"react-icons/bs\";\r\n\r\ninterface Props {\r\n\tstore: store;\r\n\tlat: number;\r\n\tlng: number;\r\n}\r\n\r\nconst renderTooltip = (store: store): JSX.Element => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<span>{store.name}</span>\r\n\t\t\t<br />\r\n\t\t\t<span>{`YTD Retail: $${store.retail.toLocaleString()}`}</span>\r\n\t\t\t<br />\r\n\t\t\t<span>{`YTD Service: $${store.service.toLocaleString()}`}</span>\r\n\t\t\t<br />\r\n\t\t\t<span>{store.phone}</span>\r\n\t\t\t<br />\r\n\t\t\t<span>{store.address}</span>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default function Store({ store }: Props) {\r\n\treturn (\r\n\t\t<Tooltip title={renderTooltip(store)} placement={\"top\"} interactive>\r\n\t\t\t<div children={<BsFlagFill data-tip data-for={store.name} size={25} color={\"red\"} style={{ transform: \"translateY(-100%)\" }} />} />\r\n\t\t</Tooltip>\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport Pin from \"./Pin\";\r\nimport { store } from \"../logic\";\r\nimport isEqual from \"lodash/isEqual\";\r\nimport GoogleMapReact from \"google-map-react\";\r\n\r\ninterface Props {\r\n\tbootstrapURLKeys: { key: string };\r\n\tcenter: { lat: number; lng: number };\r\n\tstores: store[];\r\n\tzoom: number;\r\n}\r\n\r\nfunction Map({ bootstrapURLKeys, center, zoom, stores }: Props) {\r\n\tconst renderStores = (): JSX.Element[] => {\r\n\t\tconsole.log(\"renderStores\");\r\n\t\treturn stores.map((store, index) => <Pin key={index} store={store} lat={store.lat} lng={store.lng} />);\r\n\t};\r\n\r\n\tconsole.log(\"renderMap\");\r\n\r\n\treturn (\r\n\t\t<div className=\"map-container\">\r\n\t\t\t<GoogleMapReact bootstrapURLKeys={bootstrapURLKeys} center={center} zoom={zoom} children={renderStores()} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default React.memo(Map, (prevProps, nextProps) => isEqual(prevProps, nextProps));\r\n","import * as React from \"react\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\n\r\nimport { store } from \"../logic\";\r\n\r\ninterface Props {\r\n\tstores: store[];\r\n\tonRowClick: (param) => void;\r\n}\r\n\r\nexport default function DataTable({ stores, onRowClick }: Props) {\r\n\tconst parentWidth = window.innerWidth * 0.3;\r\n\r\n\tconst columns = [\r\n\t\t{ field: \"id\", hide: true },\r\n\t\t{ field: \"name\", headerName: \"Store\", width: parentWidth * 0.4 },\r\n\t\t{ field: \"retail\", headerName: \"Retail (ytd)\", width: parentWidth * 0.3, valueFormatter: ({ value }) => value?.toLocaleString() },\r\n\t\t{ field: \"service\", headerName: \"Service (ytd)\", width: parentWidth * 0.25, valueFormatter: ({ value }) => value?.toLocaleString() }\r\n\t];\r\n\r\n\tconst rows = stores.map((store) => {\r\n\t\treturn { id: store.id, name: store.name, retail: store.retail, service: store.service };\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className={\"table-container\"}>\r\n\t\t\t<DataGrid className={\"\"} columns={columns} rows={rows} onRowClick={onRowClick} autoPageSize />\r\n\t\t</div>\r\n\t);\r\n}\r\n","import * as React from \"react\";\r\nimport { SliderItem } from \"react-compound-slider\";\r\n\r\ninterface Props {\r\n\tkey: string;\r\n\ttick: SliderItem;\r\n\tcount: number;\r\n}\r\n\r\nexport default function Track({ tick, count }: Props) {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\tmarginTop: 14,\r\n\t\t\t\t\twidth: 1,\r\n\t\t\t\t\theight: 5,\r\n\t\t\t\t\tbackgroundColor: \"rgb(200,200,200)\",\r\n\t\t\t\t\tleft: `${tick.percent}%`\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\tmarginTop: 22,\r\n\t\t\t\t\tfontSize: 20,\r\n\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\tmarginLeft: `${-(100 / count) / 2}%`,\r\n\t\t\t\t\twidth: `${100 / count}%`,\r\n\t\t\t\t\tleft: `${tick.percent}%`\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{tick.value}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import * as React from \"react\";\r\nimport { SliderItem, GetTrackProps } from \"react-compound-slider\";\r\n\r\ninterface Props {\r\n\tsource: SliderItem;\r\n\ttarget: SliderItem;\r\n\tgetTrackProps: GetTrackProps;\r\n}\r\n\r\nexport default function Track({ source, target, getTrackProps }: Props) {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\theight: 14,\r\n\t\t\t\tzIndex: 1,\r\n\t\t\t\tbackgroundColor: \"#7aa0c4\",\r\n\t\t\t\tborderRadius: 7,\r\n\t\t\t\tcursor: \"pointer\",\r\n\t\t\t\tleft: `${source.percent}%`,\r\n\t\t\t\twidth: `${target.percent - source.percent}%`\r\n\t\t\t}}\r\n\t\t\t{...getTrackProps()}\r\n\t\t/>\r\n\t);\r\n}\r\n","import * as React from \"react\";\r\nimport { SliderItem, GetHandleProps } from \"react-compound-slider\";\r\n\r\ninterface Props {\r\n\tdomain: number[];\r\n\thandle: SliderItem;\r\n\tgetHandleProps: GetHandleProps;\r\n}\r\n\r\nexport default function Handle({ domain: [min, max], handle: { id, value, percent }, getHandleProps }: Props) {\r\n\treturn (\r\n\t\t<div\r\n\t\t\trole=\"slider\"\r\n\t\t\taria-valuemin={min}\r\n\t\t\taria-valuemax={max}\r\n\t\t\taria-valuenow={value}\r\n\t\t\tstyle={{\r\n\t\t\t\tleft: `${percent}%`,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tmarginLeft: \"-11px\",\r\n\t\t\t\tmarginTop: \"-6px\",\r\n\t\t\t\tzIndex: 2,\r\n\t\t\t\twidth: 24,\r\n\t\t\t\theight: 24,\r\n\t\t\t\tcursor: \"pointer\",\r\n\t\t\t\tborderRadius: \"50%\",\r\n\t\t\t\tboxShadow: \"1px 1px 1px 1px rgba(0, 0, 0, 0.2)\",\r\n\t\t\t\tbackgroundColor: \"#34568f\"\r\n\t\t\t}}\r\n\t\t\t{...getHandleProps(id)}\r\n\t\t/>\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport { Slider, Rail, Handles, Tracks, Ticks } from \"react-compound-slider\";\r\n\r\nimport Tick from \"./Tick\";\r\nimport Track from \"./Track\";\r\nimport Handle from \"./Handle\";\r\n\r\nconst sliderStyle: React.CSSProperties = {\r\n\twidth: \"90%\",\r\n\tmargin: \"5%\",\r\n\tposition: \"relative\"\r\n};\r\n\r\nconst railStyle: React.CSSProperties = {\r\n\theight: 14,\r\n\twidth: \"100%\",\r\n\tborderRadius: 7,\r\n\tcursor: \"pointer\",\r\n\tposition: \"absolute\",\r\n\tbackgroundColor: \"rgb(155,155,155)\"\r\n};\r\n\r\ninterface Props {\r\n\tdomain: number[];\r\n\trange: readonly number[];\r\n\tonChange: (values: number[]) => void;\r\n\tonUpdate: (values: number[]) => void;\r\n}\r\n\r\nexport default function VolumeSlider({ domain, range, onChange, onUpdate }: Props) {\r\n\treturn (\r\n\t\t<div className={\"slider-container\"}>\r\n\t\t\t<Slider\r\n\t\t\t\tmode={1}\r\n\t\t\t\tstep={1}\r\n\t\t\t\tvalues={range}\r\n\t\t\t\tdomain={domain}\r\n\t\t\t\trootStyle={sliderStyle}\r\n\t\t\t\tonChange={(values) => onChange(values as number[])}\r\n\t\t\t\tonUpdate={(values) => onUpdate(values as number[])}\r\n\t\t\t>\r\n\t\t\t\t<Rail>{({ getRailProps }) => <div style={railStyle} {...getRailProps()} />}</Rail>\r\n\t\t\t\t<Handles>\r\n\t\t\t\t\t{({ handles, getHandleProps }) => (\r\n\t\t\t\t\t\t<div className=\"slider-handles\">\r\n\t\t\t\t\t\t\t{handles.map((handle) => (\r\n\t\t\t\t\t\t\t\t<Handle key={handle.id} handle={handle} domain={domain} getHandleProps={getHandleProps} />\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Handles>\r\n\t\t\t\t<Tracks left={false} right={false}>\r\n\t\t\t\t\t{({ tracks, getTrackProps }) => (\r\n\t\t\t\t\t\t<div className=\"slider-tracks\">\r\n\t\t\t\t\t\t\t{tracks.map(({ id, source, target }) => (\r\n\t\t\t\t\t\t\t\t<Track key={id} source={source} target={target} getTrackProps={getTrackProps} />\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Tracks>\r\n\t\t\t\t<Ticks count={5}>\r\n\t\t\t\t\t{({ ticks }) => (\r\n\t\t\t\t\t\t<div className=\"slider-ticks\">\r\n\t\t\t\t\t\t\t{ticks.map((tick) => (\r\n\t\t\t\t\t\t\t\t<Tick key={tick.id} tick={tick} count={ticks.length} />\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Ticks>\r\n\t\t\t</Slider>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from \"react\";\nimport \"./styles/App.css\";\n\nimport { useLogic } from \"./logic\";\nimport Map from \"./components/Map\";\nimport Table from \"./components/Table\";\nimport VolumeSlider from \"./components/Slider\";\n\nfunction App() {\n\tconst { stores, domain, range, apiKey, zoom, center, onSliderChange, onSliderUpdate, onRowClick } = useLogic();\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Map bootstrapURLKeys={apiKey} center={center} zoom={zoom} stores={stores} />\n\t\t\t<VolumeSlider domain={domain} range={range} onChange={onSliderChange} onUpdate={onSliderUpdate} />\n\t\t\t<Table stores={stores} onRowClick={onRowClick} />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import App from \"./App\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}